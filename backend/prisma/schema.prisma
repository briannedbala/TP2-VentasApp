generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model categorias {
  id          Int         @id @default(autoincrement())
  nombre      String      @db.VarChar(100)
  descripcion String?     @db.Text
  productos   productos[]
}

model clientes {
  rut               String              @id @db.VarChar(20)
  nombre            String              @db.VarChar(100)
  calle             String?             @db.VarChar(100)
  numero            String?             @db.VarChar(10)
  comuna            String?             @db.VarChar(100)
  ciudad            String?             @db.VarChar(100)
  telefonos_cliente telefonos_cliente[]
  ventas            ventas[]
}

model detalle_venta {
  id              Int        @id @default(autoincrement())
  venta_id        Int?
  producto_id     Int?
  precio_unitario Decimal?   @db.Decimal(10, 2)
  cantidad        Int?
  subtotal        Decimal?   @db.Decimal(10, 2)
  ventas          ventas?    @relation(fields: [venta_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "detalle_venta_ibfk_1")
  productos       productos? @relation(fields: [producto_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "detalle_venta_ibfk_2")

  @@index([producto_id], map: "producto_id")
  @@index([venta_id], map: "venta_id")
}

model productos {
  id            Int             @id @default(autoincrement())
  nombre        String          @db.VarChar(100)
  precio_actual Decimal         @db.Decimal(10, 2)
  stock         Int
  proveedor_rut String?         @db.VarChar(20)
  categoria_id  Int?
  detalle_venta detalle_venta[]
  proveedores   proveedores?    @relation(fields: [proveedor_rut], references: [rut], onDelete: Restrict, onUpdate: Restrict, map: "productos_ibfk_1")
  categorias    categorias?     @relation(fields: [categoria_id], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "productos_ibfk_2")

  @@index([categoria_id], map: "categoria_id")
  @@index([proveedor_rut], map: "proveedor_rut")
}

model proveedores {
  rut        String      @id @db.VarChar(20)
  nombre     String      @db.VarChar(100)
  direccion  String?     @db.VarChar(200)
  telefono   String?     @db.VarChar(20)
  pagina_web String?     @db.VarChar(100)
  productos  productos[]
}

model telefonos_cliente {
  id          Int       @id @default(autoincrement())
  cliente_rut String?   @db.VarChar(20)
  telefono    String?   @db.VarChar(20)
  clientes    clientes? @relation(fields: [cliente_rut], references: [rut], onDelete: Restrict, onUpdate: Restrict, map: "telefonos_cliente_ibfk_1")

  @@index([cliente_rut], map: "cliente_rut")
}

model ventas {
  id            Int             @id @default(autoincrement())
  fecha         DateTime        @db.DateTime(0)
  cliente_rut   String?         @db.VarChar(20)
  descuento     Decimal?        @default(0.00) @db.Decimal(5, 2)
  monto_final   Decimal         @db.Decimal(10, 2)
  detalle_venta detalle_venta[]
  clientes      clientes?       @relation(fields: [cliente_rut], references: [rut], onDelete: Restrict, onUpdate: Restrict, map: "ventas_ibfk_1")

  @@index([cliente_rut], map: "cliente_rut")
}
